# Generated by Django 5.2 on 2025-04-08 19:52

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('job_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('submission_time', models.DateTimeField(auto_now_add=True)),
                ('job_type', models.CharField(max_length=50)),
                ('schedule_time', models.DateTimeField()),
                ('period_minutes', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('data_location', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('ERROR', 'Error')], default='PENDING', max_length=20)),
                ('last_execution_time', models.DateTimeField(blank=True, null=True)),
                ('max_retries', models.IntegerField(default=3)),
                ('retry_count', models.IntegerField(default=0)),
                ('worker_id', models.CharField(blank=True, max_length=50, null=True)),
                ('result_location', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100)),
                ('api_key', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('worker_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('hostname', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('IDLE', 'Idle'), ('DOWN', 'Down')], max_length=20)),
                ('last_heartbeat', models.DateTimeField(auto_now=True)),
                ('capacity', models.IntegerField()),
                ('current_load', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='JobHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_time', models.DateTimeField(auto_now_add=True)),
                ('worker_id', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('COMPLETED', 'Completed'), ('ERROR', 'Error')], max_length=20)),
                ('duration_ms', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_num', models.IntegerField(default=0)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler.job')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler.user'),
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('assignment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assigned_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('ASSIGNED', 'Assigned'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField()),
                ('result_location', models.TextField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler.job')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler.worker')),
            ],
        ),
    ]
